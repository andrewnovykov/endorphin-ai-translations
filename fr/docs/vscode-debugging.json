{
  "navigation": {
    "backToDocumentation": "Back to Documentation"
  },
  "header": {
    "title": "VS Code Debugging",
    "badge": "Pro Tips",
    "description": "Professional debugging with breakpoints and debug object. Master VS Code debugging for Endorphin AI tests with comprehensive debugging tools."
  },
  "quickSetup": {
    "title": "Quick Setup",
    "description": "Get debugging up and running in 3 steps",
    "step1": {
      "title": "1. Enable Debug Mode",
      "description": "Add to your .env file:",
      "code": "ENDORPHIN_DEBUG=true"
    },
    "step2": {
      "title": "2. VS Code Launch Configuration",
      "description": "Create .vscode/launch.json in your project:"
    },
    "step3": {
      "title": "3. Run Your Test in Debug Mode",
      "instructions": [
        "1. Set a breakpoint anywhere in your test file",
        "2. Press F5 or select \"Debug Endorphin Test\"",
        "3. When execution pauses, open the Debug Console",
        "4. You now have access to the endorphinDebug object!"
      ]
    }
  },
  "debugObject": {
    "title": "The Debug Object",
    "description": "Comprehensive test information at your fingertips",
    "intro": "When ENDORPHIN_DEBUG=true, Endorphin AI creates a global debug object with comprehensive test information:",
    "quickOverview": "Quick Overview",
    "quickOverviewComment": "In VS Code Debug Console:",
    "availableProperties": "Available Properties:",
    "properties": {
      "framework": "Framework instance",
      "session": "Current test session data",
      "config": "Framework configuration",
      "tools": "Available automation tools",
      "utils": "Debug utility functions"
    }
  },
  "debugUtilities": {
    "title": "Debug Utilities",
    "description": "Powerful debugging functions for test inspection",
    "sessionInformation": {
      "title": "Session Information",
      "functions": {
        "getSessionData": "Get current test session summary",
        "getSetupResult": "Get test setup result (v0.9 smart tests)",
        "getDataGenerationResult": "Get data generation result (v0.9 smart tests)",
        "clearSession": "Clear current session"
      }
    },
    "toolInspection": {
      "title": "Tool Inspection",
      "functions": {
        "inspectTools": "List all available tools with details",
        "getToolStats": "Get tool usage statistics",
        "getLastToolResult": "Get result of last tool execution"
      }
    },
    "pageInspection": {
      "title": "Page Inspection",
      "functions": {
        "getCurrentPage": "Get current page URL and title",
        "getPageElements": "List interactive elements on page",
        "takeDebugScreenshot": "Capture screenshot for debugging"
      }
    },
    "costPerformance": {
      "title": "Cost & Performance",
      "functions": {
        "getTokenUsage": "Current session token consumption",
        "getCostBreakdown": "Detailed cost analysis",
        "getPerformanceMetrics": "Test execution performance data"
      }
    }
  },
  "practicalExamples": {
    "title": "Practical Debug Examples",
    "description": "Real debugging scenarios and solutions",
    "example1": {
      "title": "Example 1: Test Stuck on Loading",
      "problem": "Problem: Test seems stuck waiting for page to load",
      "console": "In Debug Console:",
      "solution": "Solution: Page is genuinely stuck, investigate application issue"
    },
    "example2": {
      "title": "Example 2: Button Click Failing",
      "problem": "Problem: \"Click Login button\" action failing",
      "console": "In Debug Console:",
      "checkNote": "Check what's actually on the page",
      "maybeNote": "Maybe we're on wrong page or button text changed"
    },
    "example3": {
      "title": "Example 3: High Token Usage Investigation",
      "problem": "Problem: Test consuming too many tokens",
      "console": "In Debug Console:",
      "optimization": "Optimization: Simplify prompts or break into smaller tests"
    },
    "example4": {
      "title": "Example 4: v0.9.0 Setup/Data Debugging",
      "problem": "Problem: Dynamic test data not working as expected",
      "console": "In Debug Console:",
      "verification": "Verify your setup/data functions returned correct values"
    }
  },
  "advancedDebugging": {
    "title": "Advanced Debugging Techniques",
    "conditionalBreakpoints": {
      "title": "Conditional Breakpoints",
      "description": "Set breakpoints that only trigger under specific conditions:",
      "comment": "Right-click breakpoint → Edit Breakpoint → Condition",
      "onlyBreaksNote": "Only breaks when token usage exceeds 10,000",
      "usefulNote": "Useful for catching expensive operations"
    },
    "logPoints": {
      "title": "Log Points",
      "description": "Log information without stopping execution:",
      "comment": "Right-click line → Add Logpoint",
      "logsNote": "Logs to Debug Console without pausing"
    },
    "watchExpressions": {
      "title": "Watch Expressions",
      "description": "Monitor values continuously:",
      "comment": "Add to Watch panel:",
      "valuesNote": "Values update automatically as test runs"
    },
    "stepByStep": {
      "title": "Step-by-Step Tool Execution",
      "comment": "Manual tool execution for testing",
      "console": "In Debug Console:",
      "testClick": "Test a click action manually",
      "testForm": "Test form filling",
      "testElement": "Test element verification"
    }
  },
  "commonIssues": {
    "title": "Common Debugging Issues",
    "issue1": {
      "title": "Issue: Debug Object Not Available",
      "solution": "Solution:",
      "steps": [
        "Ensure ENDORPHIN_DEBUG=true in .env",
        "Check you're in debug mode (F5)",
        "Verify execution is paused at breakpoint"
      ]
    },
    "issue2": {
      "title": "Issue: Breakpoints Not Hitting",
      "solution": "Solution:",
      "steps": [
        "Check launch.json configuration",
        "Ensure test ID matches in args",
        "Verify file paths are correct"
      ]
    },
    "issue3": {
      "title": "Issue: Browser Not Visible",
      "solution": "Solution:",
      "steps": [
        "Set \"HEADLESS\": \"false\" in launch.json",
        "Or add HEADLESS=false to .env"
      ]
    }
  },
  "nextSteps": {
    "next": "Next: HTML Reporter →",
    "previous": "← Previous: Prompt Guide"
  },
  "vsCodeDebuggingPage": {
    "navigation": {
      "backToDocumentation": "[FR] Back to Documentation"
    },
    "header": {
      "title": "[FR] VS Code Debugging",
      "badge": "[FR] Pro Tips",
      "description": "[FR] Professional debugging with breakpoints and debug object. Master VS Code debugging for Endorphin AI tests with comprehensive debugging tools."
    },
    "quickSetup": {
      "title": "[FR] Quick Setup",
      "description": "[FR] Get debugging up and running in 3 steps",
      "step1": {
        "title": "[FR] 1. Enable Debug Mode",
        "description": "[FR] Add to your .env file:",
        "code": "[FR] ENDORPHIN_DEBUG=true"
      },
      "step2": {
        "title": "[FR] 2. VS Code Launch Configuration",
        "description": "[FR] Create .vscode/launch.json in your project:"
      },
      "step3": {
        "title": "[FR] 3. Run Your Test in Debug Mode",
        "instructions": "[FR] 1. Set a breakpoint anywhere in your test file,2. Press F5 or select \"Debug Endorphin Test\",3. When execution pauses, open the Debug Console,4. You now have access to the endorphinDebug object!"
      }
    },
    "debugObject": {
      "title": "[FR] The Debug Object",
      "description": "[FR] Comprehensive test information at your fingertips",
      "intro": "[FR] When ENDORPHIN_DEBUG=true, Endorphin AI creates a global debug object with comprehensive test information:",
      "quickOverview": "[FR] Quick Overview",
      "quickOverviewComment": "[FR] In VS Code Debug Console:",
      "availableProperties": "[FR] Available Properties:",
      "properties": {
        "framework": "[FR] Framework instance",
        "session": "[FR] Current test session data",
        "config": "[FR] Framework configuration",
        "tools": "[FR] Available automation tools",
        "utils": "[FR] Debug utility functions"
      }
    },
    "debugUtilities": {
      "title": "[FR] Debug Utilities",
      "description": "[FR] Powerful debugging functions for test inspection",
      "sessionInformation": {
        "title": "[FR] Session Information",
        "functions": {
          "getSessionData": "[FR] Get current test session summary",
          "getSetupResult": "[FR] Get test setup result (v0.9 smart tests)",
          "getDataGenerationResult": "[FR] Get data generation result (v0.9 smart tests)",
          "clearSession": "[FR] Clear current session"
        }
      },
      "toolInspection": {
        "title": "[FR] Tool Inspection",
        "functions": {
          "inspectTools": "[FR] List all available tools with details",
          "getToolStats": "[FR] Get tool usage statistics",
          "getLastToolResult": "[FR] Get result of last tool execution"
        }
      },
      "pageInspection": {
        "title": "[FR] Page Inspection",
        "functions": {
          "getCurrentPage": "[FR] Get current page URL and title",
          "getPageElements": "[FR] List interactive elements on page",
          "takeDebugScreenshot": "[FR] Capture screenshot for debugging"
        }
      },
      "costPerformance": {
        "title": "[FR] Cost & Performance",
        "functions": {
          "getTokenUsage": "[FR] Current session token consumption",
          "getCostBreakdown": "[FR] Detailed cost analysis",
          "getPerformanceMetrics": "[FR] Test execution performance data"
        }
      }
    },
    "practicalExamples": {
      "title": "[FR] Practical Debug Examples",
      "description": "[FR] Real debugging scenarios and solutions",
      "example1": {
        "title": "[FR] Example 1: Test Stuck on Loading",
        "problem": "[FR] Problem: Test seems stuck waiting for page to load",
        "console": "[FR] In Debug Console:",
        "solution": "[FR] Solution: Page is genuinely stuck, investigate application issue"
      },
      "example2": {
        "title": "[FR] Example 2: Button Click Failing",
        "problem": "[FR] Problem: \"Click Login button\" action failing",
        "console": "[FR] In Debug Console:",
        "checkNote": "[FR] Check what's actually on the page",
        "maybeNote": "[FR] Maybe we're on wrong page or button text changed"
      },
      "example3": {
        "title": "[FR] Example 3: High Token Usage Investigation",
        "problem": "[FR] Problem: Test consuming too many tokens",
        "console": "[FR] In Debug Console:",
        "optimization": "[FR] Optimization: Simplify prompts or break into smaller tests"
      },
      "example4": {
        "title": "[FR] Example 4: v0.9.0 Setup/Data Debugging",
        "problem": "[FR] Problem: Dynamic test data not working as expected",
        "console": "[FR] In Debug Console:",
        "verification": "[FR] Verify your setup/data functions returned correct values"
      }
    },
    "advancedDebugging": {
      "title": "[FR] Advanced Debugging Techniques",
      "conditionalBreakpoints": {
        "title": "[FR] Conditional Breakpoints",
        "description": "[FR] Set breakpoints that only trigger under specific conditions:",
        "comment": "[FR] Right-click breakpoint → Edit Breakpoint → Condition",
        "onlyBreaksNote": "[FR] Only breaks when token usage exceeds 10,000",
        "usefulNote": "[FR] Useful for catching expensive operations"
      },
      "logPoints": {
        "title": "[FR] Log Points",
        "description": "[FR] Log information without stopping execution:",
        "comment": "[FR] Right-click line → Add Logpoint",
        "logsNote": "[FR] Logs to Debug Console without pausing"
      },
      "watchExpressions": {
        "title": "[FR] Watch Expressions",
        "description": "[FR] Monitor values continuously:",
        "comment": "[FR] Add to Watch panel:",
        "valuesNote": "[FR] Values update automatically as test runs"
      },
      "stepByStep": {
        "title": "[FR] Step-by-Step Tool Execution",
        "comment": "[FR] Manual tool execution for testing",
        "console": "[FR] In Debug Console:",
        "testClick": "[FR] Test a click action manually",
        "testForm": "[FR] Test form filling",
        "testElement": "[FR] Test element verification"
      }
    },
    "commonIssues": {
      "title": "[FR] Common Debugging Issues",
      "issue1": {
        "title": "[FR] Issue: Debug Object Not Available",
        "solution": "[FR] Solution:",
        "steps": "[FR] Ensure ENDORPHIN_DEBUG=true in .env,Check you're in debug mode (F5),Verify execution is paused at breakpoint"
      },
      "issue2": {
        "title": "[FR] Issue: Breakpoints Not Hitting",
        "solution": "[FR] Solution:",
        "steps": "[FR] Check launch.json configuration,Ensure test ID matches in args,Verify file paths are correct"
      },
      "issue3": {
        "title": "[FR] Issue: Browser Not Visible",
        "solution": "[FR] Solution:",
        "steps": "[FR] Set \"HEADLESS\": \"false\" in launch.json,Or add HEADLESS=false to .env"
      }
    },
    "nextSteps": {
      "next": "[FR] HTML Reporter",
      "previous": "[FR] Prompt Guide"
    }
  }
}
